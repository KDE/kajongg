#!/bin/sh
#
# hook script to verify what is about to be committed.
# Called by git-commit with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, copy it to .git/hooks/pre-commit

if git-rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ascii filenames set this variable to true.
allownonascii=$(git config hooks.allownonascii)

# Cross platform projects tend to avoid non-ascii filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test "$(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0')"
then
	echo "Error: Attempt to add a non-ascii file name."
	echo
	echo "This can cause problems if you want to work"
	echo "with people on other platforms."
	echo
	echo "To be portable it is advisable to rename the file ..."
	echo
	echo "If you know what you are doing you can disable this"
	echo "check using:"
	echo
	echo "  git config hooks.allownonascii true"
	echo
	exit 1
fi

for file in `git diff --cached --name-only`
do
	test -r $file || continue
	if test `expr $file : '.*.py$'` -ne 0
	then
		cmakefile=`echo $file | sed 's%^kajongg/%%'`
		if test $cmakefile != src/scoringtest.py -a $cmakefile != src/kajonggtest.py -a $cmakefile != setup.py
		then
			if ! grep -w $cmakefile kajongg/CMakeLists.txt >/dev/null
			then
				echo $cmakefile missing in CMakeLists.txt
				exit 1
			fi
		fi
		if grep -ne '[[:alnum:]]?*   *[[:alnum:]]' $file
		then
			echo $file has double spaces
			exit 1
		fi
	fi
	test `expr $file : '.*.svgz'` -ne 0 && continue
	test `expr $file : '.*.png'` -ne 0 && continue
	set - `wc $file`
	bytes=`expr $3 - 1`
	set - `dd if=$file bs=1 skip=$bytes count=1 2>/dev/null | od -a`
	if [ $2 != nl ]
	then
		echo "$file: The last line does not end with LF"
		exit 1
	fi
done

# checks for trailing whitespace and space before tab:
git diff-index --check --cached $against --
result=$?
if [ $result -ne 0 ]
then
	exit $result
fi

# we want to do the content tests only against cached changes
# to be committed, ignoring other changes which are not yet on
# the index.
# git stash --keep-index is nice but then my working directory
# would change twice - before and after committing. And I would
# need a wrapper around git commit which could be circumvented.
# I prefer something more atomic.

# we run in a repository named gitgames, change if needed
# ../gitgames.tmp holds a copy of ../gitgames, without its own .git

MIRROR=../gitgames.tmp
git checkout-index --prefix=$MIRROR/ -af
cd $MIRROR/kajongg/src

echo -n pylint in `pwd`...
pylint --reports=n *py
result=$?

echo done
if [ $result -ne 0 ]
then
	echo "pylint must be quiet"
	exit $result
fi
./scoringtest.py
result=$?
if [ $result -ne 0 ]
then
	echo "scoringtest.py failed"
	exit $result
fi

exit 0
